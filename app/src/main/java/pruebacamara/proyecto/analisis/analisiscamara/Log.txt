*************************************************************
*   Funciones eliminadas en caso de ser requeridas luego    *
*************************************************************


//Crear una lista con un chooser.
public void showOptions(View view) {
    final CharSequence[] option = {"Abrir Camara", "Elegir de galeria", "Cancelar"};
    final AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);
    builder.setTitle("Eleige una opción");
    builder.setItems(option, new DialogInterface.OnClickListener() {
        @Override
        public void onClick(DialogInterface dialog, int which) {
            if(option[which] == "Abrir Camara"){
                openCamera(findViewById(R.id.ok));
            }else if(option[which] == "Elegir de galeria"){

            }else {
                dialog.dismiss();
            }
        }
    });
    builder.show();
}


/**
 * Dado un fuente y un destino copia los datos del archivo, no maneja excepciones la función
 * que llame debe manejar el error
 *
 * @param source      Archivo fuente de los datos a copiar
 * @param destination Archivo destino de los datos a copiar
 * @throws IOException Lanza una excepción en canso de obtener un error al leer archivo o copiarlo
 */
private void copyFile(File source, File destination) throws IOException {
    FileChannel in = new FileInputStream(source).getChannel();
    FileChannel out = new FileOutputStream(destination).getChannel();

    in.transferTo(0, in.size(), out);
    in.close();
    out.close();
}